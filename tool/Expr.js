/*
	generated by GenerateAst.js
*/

class Expr {
	accept(visitor) {}
}

class Binary extends Expr {
	constructor(left,operator,right) {
		this.left = left
		this.operator = operator
		this.right = right
	}

	accept(visitor) {
		return visitor.visitBinaryExpr(this)
	}
}

class Grouping extends Expr {
	constructor(expression) {
		this.expression = expression
	}

	accept(visitor) {
		return visitor.visitGroupingExpr(this)
	}
}

class Literal extends Expr {
	constructor(value) {
		this.value = value
	}

	accept(visitor) {
		return visitor.visitLiteralExpr(this)
	}
}

class Unary extends Expr {
	constructor(operator,right) {
		this.operator = operator
		this.right = right
	}

	accept(visitor) {
		return visitor.visitUnaryExpr(this)
	}
}

